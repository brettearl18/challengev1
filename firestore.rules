rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Development mode - allow all operations for testing
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Production rules (commented out for now)
    /*
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && resource.data.role == 'admin';
    }

    // Challenges - public read, admin write
    match /challenges/{challengeId} {
      allow read: if true;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Challenge participants - users can read/write their own data
    match /challenges/{challengeId}/participants/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Check-ins - users can read/write their own data
    match /checkins/{checkinId} {
      allow read, write: if request.auth != null &&
        resource.data.userId == request.auth.uid;
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Leaderboards - public read
    match /leaderboards/{challengeId} {
      allow read: if true;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    */
  }
} 