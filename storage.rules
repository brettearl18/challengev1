rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Development mode - allow all operations for testing
    match /{allPaths=**} {
      allow read, write: if true;
    }
    
    // Production rules (commented out for now)
    /*
    // User profile images - users can upload/delete their own images
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Challenge banners - public read, admin write
    match /challenges/{challengeId}/banner/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Check-in images - users can upload their own, public read
    match /checkins/{checkinId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null &&
        firestore.get(/databases/(default)/documents/checkins/$(checkinId)).data.userId == request.auth.uid;
    }

    // General rule - authenticated users can read, but write requires specific permissions
    match /{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if false; // Explicit deny for general write access
    }
    */
  }
} 